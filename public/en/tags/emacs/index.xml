<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Emacs - Tag - Chaos Talk</title>
        <link>http://localhost:1313/en/tags/emacs/</link>
        <description>Emacs - Tag - Chaos Talk</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>blog@chaoruan.dev (Chao Ruan)</managingEditor>
            <webMaster>blog@chaoruan.dev (Chao Ruan)</webMaster><lastBuildDate>Sat, 26 Oct 2019 10:58:00 &#43;1100</lastBuildDate><atom:link href="http://localhost:1313/en/tags/emacs/" rel="self" type="application/rss+xml" /><item>
    <title>Running Oh-My-Zsh inside Spacemacs</title>
    <link>http://localhost:1313/en/posts/running-oh-my-zsh-inside-spacemacs/</link>
    <pubDate>Sat, 26 Oct 2019 10:58:00 &#43;1100</pubDate>
    <author>Chao Ruan</author>
    <guid>http://localhost:1313/en/posts/running-oh-my-zsh-inside-spacemacs/</guid>
    <description><![CDATA[<p>When I start using <a href="http://spacemacs.org/" target="_blank" rel="noopener noreffer ">Spacemacs</a>, I was hoping there is a way to using my own configured <a href="https://ohmyz.sh/" target="_blank" rel="noopener noreffer ">zsh</a>
inside the Spacemacs workflow, after a look through the documentation, of
course we can do it</p>
<p>First, we need to let Spacemacs load zsh when it setup <code>shell</code>, and I found
you can do a pop-up buffer style with 30% of the current height from the
bottom.</p>
<p>So in <code>.spacemacs</code> we can set this in <code>dotspacemacs-configure-layers</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nv">shell</span> <span class="nb">:variables</span>
</span></span><span class="line"><span class="cl">       <span class="nv">shell-default-term-shell</span> <span class="s">&#34;/bin/zsh&#34;</span> <span class="c1">;; find your zsh path using `$ whereis zsh`</span>
</span></span><span class="line"><span class="cl">       <span class="nv">shell-default-height</span> <span class="mi">30</span>
</span></span><span class="line"><span class="cl">       <span class="nv">shell-default-position</span> <span class="ss">&#39;bottom</span><span class="p">)</span>
</span></span></code></pre></div><p>This change is the basic setup, <strong>but since I enabled <code>vi</code> key bindings in my
zsh, it starts conflicts with Spacemacs <a href="https://github.com/emacs-evil/evil" target="_blank" rel="noopener noreffer ">evil-mode</a>.</strong> after a play around with different
settings, I found the best option for me is to disable the evil-mode inside
<a href="https://www.emacswiki.org/emacs/AnsiTerm" target="_blank" rel="noopener noreffer ">ansi-term</a>.</p>
<p>Add following code in <code>dotspacemacs/user-config</code>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nv">evil-set-initial-state</span> <span class="ss">&#39;term-mode</span> <span class="ss">&#39;emacs</span><span class="p">)</span>
</span></span></code></pre></div><p>This change allows us navigation in ansi-term, but we can not editing
anything in the input line. We need to do <strong>one more change</strong>:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nv">evil-set-initial-state</span> <span class="ss">&#39;term-mode</span> <span class="ss">&#39;emacs</span><span class="p">)</span> <span class="c1">;; turn off evil-mode for ansi-term</span>
</span></span><span class="line"><span class="cl"><span class="p">(</span><span class="nb">setq</span> <span class="nv">term-char-mode-point-at-process-mark</span> <span class="no">nil</span><span class="p">)</span> <span class="c1">;; allow editing in normal mode</span>
</span></span></code></pre></div><p>After <code>SPC f e R</code>, we can now using zsh inside Spacemacs</p>
<h2 id="reference">Reference</h2>
<ul>
<li><a href="https://github.com/syl20bnr/spacemacs/issues/8642" target="_blank" rel="noopener noreffer ">syl20bnr/spacemacs#8642 Cannot edit shell commands in normal mode.</a></li>
<li><a href="https://github.com/syl20bnr/spacemacs/tree/develop/layers/&#43;tools/shell" target="_blank" rel="noopener noreffer ">spacemacs/layers/+tools/shell at develop · syl20bnr/spacemacs · GitHub</a></li>
</ul>]]></description>
</item>
<item>
    <title>ox-hugo Install Issue with Spacemacs</title>
    <link>http://localhost:1313/en/posts/ox-hugo-install-issue-with-spacemacs/</link>
    <pubDate>Wed, 23 Oct 2019 18:42:00 &#43;1100</pubDate>
    <author>Chao Ruan</author>
    <guid>http://localhost:1313/en/posts/ox-hugo-install-issue-with-spacemacs/</guid>
    <description><![CDATA[<p>While I try to install <a href="https://ox-hugo.scripter.co/" target="_blank" rel="noopener noreffer ">ox-hugo</a> on my <a href="http://spacemacs.org/" target="_blank" rel="noopener noreffer ">Spacemacs</a>, I found an issue:</p>
<p>After reading the install and <a href="https://ox-hugo.scripter.co/#usage" target="_blank" rel="noopener noreffer ">usage guide</a>. I added <code>ox-hugo</code>
to <code>dotspacemacs-additional-packages</code> and also did this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nb">defun</span> <span class="nv">dotspacemacs/user-config</span> <span class="p">()</span>
</span></span><span class="line"><span class="cl">  <span class="c1">;; Other stuff</span>
</span></span><span class="line"><span class="cl">  <span class="c1">;; ..</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c1">;; ox-hugo config</span>
</span></span><span class="line"><span class="cl">  <span class="p">(</span><span class="nb">use-package</span> <span class="nv">ox-hugo</span>
</span></span><span class="line"><span class="cl">    <span class="nb">:ensure</span> <span class="no">t</span>          <span class="c1">;Auto-install the package from Melpa (optional)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">:after</span> <span class="nv">ox</span><span class="p">))</span>
</span></span></code></pre></div><p><strong>Everything works fine until I restart emacs</strong>:</p>
<p><code>ox-hugo</code> been marked as <strong>an orphan package</strong> and got removed first then
reinstalled back immediately.</p>
<p>By searching and digging around the Spacemacs documentation, I found the
Spacemacs <code>org layer</code> already has <a href="http://develop.spacemacs.org/layers/&#43;emacs/org/README.html#hugo-support" target="_blank" rel="noopener noreffer ">org-hugo support by default</a> (<code>development</code>
branch only). So we <strong>don&rsquo;t need to follow</strong> the <a href="https://ox-hugo.scripter.co/" target="_blank" rel="noopener noreffer ">ox-hugo</a> usage guide.
we can do this in <code>.spacemacs</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span class="line"><span class="cl"><span class="p">(</span><span class="nb">setq-default</span>
</span></span><span class="line"><span class="cl"> <span class="nv">dotspacemacs-configuration-layers</span>
</span></span><span class="line"><span class="cl"> <span class="o">&#39;</span><span class="p">((</span><span class="nv">org</span> <span class="nb">:variables</span>
</span></span><span class="line"><span class="cl">        <span class="nv">org-enable-hugo-support</span> <span class="no">t</span><span class="p">)))</span>
</span></span></code></pre></div><p>Orphan package and reinstall issue should be fixed now.</p>]]></description>
</item>
</channel>
</rss>
